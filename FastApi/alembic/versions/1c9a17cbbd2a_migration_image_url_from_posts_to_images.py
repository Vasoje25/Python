"""migration_image_url_from_posts_to_images

Revision ID: 1c9a17cbbd2a
Revises: fee8d7562b63
Create Date: 2024-03-27 14:39:26.312273

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1c9a17cbbd2a'
down_revision: Union[str, None] = 'fee8d7562b63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
        ### commands auto generated by Alembic - please adjust! ###
    #http://stackoverflow.com/questions/15725859/sqlalchemy-alembic-bulk-insert-fails-str-object-has-no-attribute-autoincre
    images = sa.sql.table('images',
        sa.Column('post_id', sa.Integer, nullable=False),
        sa.Column('image_url', sa.String(), nullable=False),
    )
    conn = op.get_bind()
    res = conn.execute("SELECT id, image_url FROM posts WHERE image_url IS NOT NULL")
    results = res.fetchall()
    posts = [{'post_id': r[0], 'image_url': r[1]} for r in results]
    op.bulk_insert(images, posts)
    op.drop_column(u'posts', u'image_url')
    ### end Alembic commands ###


def downgrade() -> None:
    op.add_column('posts', sa.Column('image_url', sa.String(), nullable=True))
    conn = op.get_bind()
    conn.execute("""
        UPDATE posts
            SET image_url = (
                SELECT image_url FROM images WHERE posts.id = images.post_id
        )""")
    conn.execute("""DELETE FROM images""")


# def downgrade() -> None:
#     op.add_column('posts', sa.Column('image_url', sa.String(), nullable=True))
#     posts = sa.sql.table('posts',
#         sa.Column('image_url', sa.String(), nullable=False)
#     )
#     conn = op.get_bind()
#     res = conn.execute("SELECT post_id, image_url FROM images")
#     results = res.fetchall()
#     for r in results:
#         conn.execute(f"UPDATE posts SET image_url ={r[1]} WHERE id = {r[0]}")
